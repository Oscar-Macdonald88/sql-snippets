--Use to find AOAG partners of the database you are running the query from
--Can also be used in conjunction with SQLCMD and MaintenanceWin script to place in Maintenance Windows on Partner servers that may not be under direct patching
SELECT AGC.name AS AOAGName, RCS.replica_server_name AS NodeName, ARS.role_desc AS CurState, SSL.IsMonitored, 'EXEC SSLDBA..up_ApplyAGSupport ''' + AGC.name + ''', ''' + ARS.role_desc + '''''' AS 'ApplyAG' INTO #AOAG FROM sys.availability_groups_cluster AS AGC INNER JOIN sys.dm_hadr_availability_replica_cluster_states AS RCS ON RCS.group_id = AGC.group_id INNER JOIN sys.dm_hadr_availability_replica_states AS ARS ON ARS.replica_id = RCS.replica_id LEFT JOIN [SSLDBA]..[tbl_AlwaysOnGroups] SSL ON SSL.GroupName = AGC.resource_group_id
	WHERE RCS.replica_server_name NOT IN ('') --AND RCS.replica_server_name != @@SERVERNAME --If you don't want to see the local instance 
SELECT * FROM #AOAG ORDER BY AOAGName ASC,CurState DESC
DECLARE @TempTSQL TABLE(Part1CollectAOAGEventData VARCHAR(3000))
WHILE EXISTS (SELECT * FROM #AOAG GROUP BY AOAGName) BEGIN
	INSERT INTO @TempTSQL VALUES ((SELECT TOP(1) ':CONNECT ' + AOAGName AS 'SQLCMD'FROM #AOAG GROUP BY AOAGName)), ((SELECT 'DECLARE @utc_adjustment INT = DATEDIFF(HOUR, GETUTCDATE(), GETDATE()); SELECT CONVERT(XML, target_data).value(''(EventFileTarget/File/@name)[1]'', ''varchar(1024)'') AS TG INTO #EventFilePath FROM sys.dm_xe_sessions s INNER JOIN sys.dm_xe_session_targets st on s.address = st.event_session_address WHERE s.name = ''alwayson_health'' AND st.target_name = ''event_file'';UPDATE #EventFilePath SET TG = LEFT(TG, LEN(TG) - CHARINDEX(''\'', REVERSE(TG))) + ''\AlwaysOn_health*.xel''; IF EXISTS(SELECT TOP(1) TG FROM #EventFilePath WHERE TG IS NOT NULL) BEGIN SELECT OBJECT_NAME, event_data = CONVERT(XML, event_data) INTO #EventData FROM sys.fn_xe_file_target_read_file((SELECT TOP(1) TG FROM #EventFilePath), NULL, NULL, NULL); SELECT ''INSERT INTO @AOAGEvents VALUES('''''' + CONVERT(VARCHAR(500), DATEADD(HOUR, @utc_adjustment, event_data.value(''(event/@timestamp)[1]'', ''datetime'')), 109) + '''''', '''''' + event_data.value(''(event/data[@name = "availability_group_name"]/value)[1]'', ''varchar(64)'') + '''''', '''''' + @@SERVERNAME + '''''', '''''' + event_data.value(''(event/data[@name = "previous_state"]/text)[1]'', ''varchar(64)'') + '''''', '''''' + event_data.value(''(event/data[@name = "current_state"]/text)[1]'', ''varchar(64)'') + '''''')'' AS ''TSQL'' FROM #EventData WHERE OBJECT_NAME = ''availability_replica_state_change''; DROP TABLE #EventData;END ELSE BEGIN SELECT ''No AOAG data available!'' AS ''No data'' END DROP TABLE #EventFilePath'))
	DELETE FROM #AOAG WHERE AOAGName = (SELECT TOP(1) AOAGName FROM #AOAG GROUP BY AOAGName)
END
SELECT * FROM @TempTSQL
SELECT 'DECLARE @AOAGEvents TABLE (EventDate DateTime, AOAGName VARCHAR(200), NodeName VARCHAR(200), PrevState VARCHAR(200), CurrState VARCHAR(200))' AS Part2ShowAOAGEvents UNION ALL
SELECT '-- INSERTs here' UNION ALL
SELECT '' UNION ALL
SELECT 'SELECT AOAGName INTO #AOAGs FROM @AOAGEvents GROUP BY AOAGName; UPDATE @AOAGEvents SET PrevState = LOWER(PrevState) WHERE PrevState LIKE ''%PENDING%'' or PrevState LIKE ''%RESOLVING%'' or PrevState LIKE ''%NOT_AVAILABLE%''; UPDATE @AOAGEvents SET CurrState = LOWER(CurrState) WHERE CurrState LIKE ''%PENDING%'' or CurrState LIKE ''%RESOLVING%'' or CurrState LIKE ''%NOT_AVAILABLE%''; UPDATE @AOAGEvents SET PrevState = REPLACE (PrevState,''Y_NORMAL'',''Y !!!''), CurrState = REPLACE (CurrState,''Y_NORMAL'',''Y !!!''); DECLARE @AOAGName VARCHAR(200); WHILE EXISTS (SELECT * FROM #AOAGs) BEGIN SET @AOAGName = (SELECT TOP(1) * FROM #AOAGs); SELECT * FROM @AOAGEvents WHERE AOAGName = @AOAGName ORDER BY EventDate DESC; DELETE TOP(1) FROM #AOAGs; END; DROP TABLE #AOAGs;'
 
DROP TABLE #AOAG